'use client'
import { useSelectedLayoutSegment } from 'next/navigation'
import style from '@/style/layout.module.css'
import { useEffect, useState } from 'react'
import Image from 'next/image'
import { SearchInput } from '../(presentation)/search'
import LayoutLi from '../(presentation)/layoutLi'
import {UserContext} from "@/app/userContext"
import { api } from '@/app/keepinglyClientApi'
export default function Nav() {
    let currentParam = useSelectedLayoutSegment()
    let [hideNav, setHideNav] = useState(false)
    let [canClick, setCanClick] = useState(false)
    UserContext.setCanClick = setCanClick
    let arrayIcon = [
        {
            name: 'Overview',
            svg: <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M9.00004 3.33359V2.33359H13.6667V7.00025H9.00004V6.00025M3.33337 9.00025H2.33337V13.6669H7.00004V9.00025H6.00004M2.33337 2.33359H7.00004V7.00025H2.33337V2.33359ZM9.00004 9.00025H13.6667V13.6669H9.00004V9.00025Z" stroke={ currentParam === "Overview" ? '#A61D4A' : "#838383"} strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
            </svg>        
        },{
            name: 'Properties',
            svg: <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path opacity="0.15" d="M2.66663 6.66691L7.99996 2.00024L13.3333 6.66691L13.3333 13.3336H9.99996V10.6669C9.99996 10.1365 9.78925 9.62777 9.41418 9.2527C9.0391 8.87762 8.5304 8.66691 7.99996 8.66691C7.46953 8.66691 6.96082 8.87762 6.58575 9.2527C6.21068 9.62777 5.99996 10.1365 5.99996 10.6669V13.3336H2.66663L2.66663 6.66691Z" fill={ currentParam === 'Properties' ? '#A61D4A' : "#838383"}/>
            <path d="M2.66663 6.66691L7.99996 2.00024L13.3333 6.66691L13.3333 13.3336H9.99996V10.6669C9.99996 10.1365 9.78925 9.62777 9.41418 9.2527C9.0391 8.87762 8.5304 8.66691 7.99996 8.66691C7.46953 8.66691 6.96082 8.87762 6.58575 9.2527C6.21068 9.62777 5.99996 10.1365 5.99996 10.6669V13.3336H2.66663L2.66663 6.66691Z" stroke={ currentParam === 'Properties' ? '#A61D4A' : "#838383"} strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
            </svg>
                    
        },{
            name: 'Documents',
            svg: <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path opacity="0.15" d="M3.33337 14.0002H12.6667V6.00024H10C9.26366 6.00024 8.66671 5.40329 8.66671 4.66691V2.00024H3.33337V14.0002Z" fill={ currentParam === 'Documents' ? '#A61D4A' : "#838383"}/>
            <path d="M3.33337 2.00024V1.25024C2.91916 1.25024 2.58337 1.58603 2.58337 2.00024H3.33337ZM12.6667 14.0002V14.7502C13.0809 14.7502 13.4167 14.4145 13.4167 14.0002H12.6667ZM3.33337 14.0002H2.58337C2.58337 14.4145 2.91916 14.7502 3.33337 14.7502V14.0002ZM9.33337 2.00024L9.8637 1.46991C9.72305 1.32926 9.53229 1.25024 9.33337 1.25024V2.00024ZM12.6667 5.33358H13.4167C13.4167 5.13467 13.3377 4.9439 13.197 4.80325L12.6667 5.33358ZM5.33337 10.5836C4.91916 10.5836 4.58337 10.9194 4.58337 11.3336C4.58337 11.7478 4.91916 12.0836 5.33337 12.0836V10.5836ZM10.6667 12.0836C11.0809 12.0836 11.4167 11.7478 11.4167 11.3336C11.4167 10.9194 11.0809 10.5836 10.6667 10.5836V12.0836ZM5.33337 7.91691C4.91916 7.91691 4.58337 8.2527 4.58337 8.66691C4.58337 9.08112 4.91916 9.41691 5.33337 9.41691V7.91691ZM9.33337 9.41691C9.74759 9.41691 10.0834 9.08112 10.0834 8.66691C10.0834 8.2527 9.74759 7.91691 9.33337 7.91691V9.41691ZM12.6667 13.2502H3.33337V14.7502H12.6667V13.2502ZM4.08337 14.0002V2.00024H2.58337V14.0002H4.08337ZM3.33337 2.75024H9.33337V1.25024H3.33337V2.75024ZM11.9167 5.33358V14.0002H13.4167V5.33358H11.9167ZM8.80304 2.53057L12.1364 5.86391L13.197 4.80325L9.8637 1.46991L8.80304 2.53057ZM7.91671 2.00024V4.66691H9.41671V2.00024H7.91671ZM10 6.75024H12.6667V5.25024H10V6.75024ZM7.91671 4.66691C7.91671 5.8175 8.84945 6.75024 10 6.75024V5.25024C9.67788 5.25024 9.41671 4.98908 9.41671 4.66691H7.91671ZM5.33337 12.0836H10.6667V10.5836H5.33337V12.0836ZM5.33337 9.41691H9.33337V7.91691H5.33337V9.41691Z" fill={ currentParam === 'Documents' ? '#A61D4A' : "#838383"}/>
            </svg>
        },{
            name: 'Photos',
            svg: <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path opacity="0.15" d="M2.66663 3.33366C2.66663 2.96547 2.9651 2.66699 3.33329 2.66699H12.6666C13.0348 2.66699 13.3333 2.96547 13.3333 3.33366V12.667C13.3333 13.0352 13.0348 13.3337 12.6666 13.3337H3.33329C2.9651 13.3337 2.66663 13.0352 2.66663 12.667V3.33366Z" fill={ currentParam === 'Photos' ? '#A61D4A' : "#838383"}/>
            <path d="M2.66663 12.0003L5.05715 9.6098C5.57785 9.0891 6.42207 9.0891 6.94277 9.6098L7.05715 9.72418C7.57785 10.2449 8.42207 10.2449 8.94277 9.72418L10.3905 8.27647C10.9112 7.75577 11.7554 7.75577 12.2761 8.27647L13.3333 9.33366M3.33329 13.3337H12.6666C13.0348 13.3337 13.3333 13.0352 13.3333 12.667V3.33366C13.3333 2.96547 13.0348 2.66699 12.6666 2.66699H3.33329C2.9651 2.66699 2.66663 2.96547 2.66663 3.33366V12.667C2.66663 13.0352 2.9651 13.3337 3.33329 13.3337ZM7.12729 5.89766C7.12729 6.57699 6.57596 7.12833 5.89663 7.12833C5.21796 7.12833 4.66663 6.57699 4.66663 5.89766C4.66663 5.21833 5.21796 4.66699 5.89663 4.66699C6.57596 4.66699 7.12729 5.21833 7.12729 5.89766Z" stroke={ currentParam === 'Photos' ? '#A61D4A' : "#838383"} stroke-width="1.5" stroke-linejoin="round"/>
            </svg>                      
        },{
            name: 'Videos',
            svg: <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path opacity="0.15" d="M2 4.33366C2 3.96547 2.29848 3.66699 2.66667 3.66699H10C10.3682 3.66699 10.6667 3.96547 10.6667 4.33366V11.667C10.6667 12.0352 10.3682 12.3337 10 12.3337H2.66667C2.29848 12.3337 2 12.0352 2 11.667V4.33366Z" fill={ currentParam === 'Videos' ? '#A61D4A' : "#838383"}/>
            <path d="M10.6667 6.00033L14 4.66699V11.3337L10.6667 10.0003M2.66667 12.3337H10C10.3682 12.3337 10.6667 12.0352 10.6667 11.667V4.33366C10.6667 3.96547 10.3682 3.66699 10 3.66699H2.66667C2.29848 3.66699 2 3.96547 2 4.33366V11.667C2 12.0352 2.29848 12.3337 2.66667 12.3337Z" stroke={ currentParam === 'Videos' ? '#A61D4A' : "#838383"} stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>                     
        },{
            name: "Expenses",
            svg: <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path opacity="0.2" fill-rule="evenodd" clip-rule="evenodd" d="M2.66667 4.66687C2.29848 4.66687 2 4.96535 2 5.33354V10.6669C2 11.0351 2.29848 11.3335 2.66667 11.3335H13.3333C13.7015 11.3335 14 11.0351 14 10.6669V5.33354C14 4.96535 13.7015 4.66687 13.3333 4.66687H2.66667ZM8 9.66687C8.92047 9.66687 9.66667 8.92068 9.66667 8.0002C9.66667 7.07973 8.92047 6.33354 8 6.33354C7.07953 6.33354 6.33333 7.07973 6.33333 8.0002C6.33333 8.92068 7.07953 9.66687 8 9.66687Z" fill={ currentParam === 'Expenses' ? '#A61D4A' : "#838383"}/>
            <path d="M12 6.33354V9.66687M4 6.33354V9.66687M2.66667 11.3335H13.3333C13.7015 11.3335 14 11.0351 14 10.6669V5.33354C14 4.96535 13.7015 4.66687 13.3333 4.66687H2.66667C2.29848 4.66687 2 4.96535 2 5.33354V10.6669C2 11.0351 2.29848 11.3335 2.66667 11.3335ZM9.66667 8.0002C9.66667 8.92068 8.92047 9.66687 8 9.66687C7.07953 9.66687 6.33333 8.92068 6.33333 8.0002C6.33333 7.07973 7.07953 6.33354 8 6.33354C8.92047 6.33354 9.66667 7.07973 9.66667 8.0002Z" stroke={ currentParam === 'Expenses' ? '#A61D4A' : "#838383"} stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>            
        },{
            name: 'Renovation',
            svg: <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
            <g opacity="0.15">
            <path d="M14 8.00024C14 8.73662 13.403 9.33358 12.6667 9.33358C11.9303 9.33358 11.3333 8.73662 11.3333 8.00024C11.3333 7.26386 11.9303 6.66691 12.6667 6.66691C13.403 6.66691 14 7.26386 14 8.00024Z" fill="#A61D4A"/>
            <path d="M9.33333 12.0002C9.33333 12.7366 8.73638 13.3336 8 13.3336C7.26362 13.3336 6.66667 12.7366 6.66667 12.0002C6.66667 11.2639 7.26362 10.6669 8 10.6669C8.73638 10.6669 9.33333 11.2639 9.33333 12.0002Z" fill="#A61D4A"/>
            <path d="M4.66667 4.00024C4.66667 4.73662 4.06971 5.33358 3.33333 5.33358C2.59695 5.33358 2 4.73662 2 4.00024C2 3.26386 2.59695 2.66691 3.33333 2.66691C4.06971 2.66691 4.66667 3.26386 4.66667 4.00024Z" fill="#A61D4A"/>
            </g>
            <path d="M12.6667 9.33358C13.403 9.33358 14 8.73662 14 8.00024C14 7.26386 13.403 6.66691 12.6667 6.66691M12.6667 9.33358C11.9303 9.33358 11.3333 8.73662 11.3333 8.00024C11.3333 7.26386 11.9303 6.66691 12.6667 6.66691M12.6667 9.33358V13.3336M12.6667 6.66691V2.66691M8 10.6669C7.26362 10.6669 6.66667 11.2639 6.66667 12.0002C6.66667 12.7366 7.26362 13.3336 8 13.3336C8.73638 13.3336 9.33333 12.7366 9.33333 12.0002C9.33333 11.2639 8.73638 10.6669 8 10.6669ZM8 10.6669V2.66691M3.33333 5.33358C4.06971 5.33358 4.66667 4.73662 4.66667 4.00024C4.66667 3.26386 4.06971 2.66691 3.33333 2.66691C2.59695 2.66691 2 3.26386 2 4.00024C2 4.73662 2.59695 5.33358 3.33333 5.33358ZM3.33333 5.33358V13.3336" stroke="#A61D4A" stroke-width="1.5" stroke-linecap="round"/>
            </svg>            
        },
        {
            name: 'Setting',
            svg: <Image src={"/asset/icons/setting.png"} width={16} height={16}/>
        }
    ]
    let liMap = arrayIcon.map(({name, svg}, id)=>{
        return(
            <LayoutLi canClick={canClick} hide={hideNav} isActive={name === currentParam} Text={name} icon={svg} linkHref={`/${name}`} key={id}/>
        )
    })
    useEffect(()=>{
        (async ()=>{
            let tkn = sessionStorage.getItem('kpuo')
            let apiValue = await api.get('/api/v2/profile/', {
                headers: {
                    'Content-Type': 'application/json',
                    Authorization: `Bearer ${tkn}`
                }
            })
            setCanClick( Array.isArray(apiValue.data) ? apiValue.data[0]?.agency_address !== undefined : false)
            sessionStorage.setItem('kppk', Array.isArray(apiValue.data) ? apiValue.data[0].id : '')
        })()
    }, [])
    return(
        <nav className={`${style.sidebar} ${hideNav && style.left}`}>
                    <div className={style.floatBtn} onClick={()=> setHideNav(!hideNav)}>
                        <svg className={ hideNav ? style.rotate : ""} width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <rect width="40" height="40" rx="20" fill="white"/>
                            <path d="M20.0003 14.6667L14.667 20.0001L20.0003 25.3334" stroke="#AAAAAA" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M24.0003 14.6667L18.667 20.0001L24.0003 25.3334" stroke="#AAAAAA" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                        </svg>
                    </div>
                    <Image className={hideNav ? style.img +' ' + style.block: style.img + ' ' + style.none}  src={'/asset/logo/logoHide.png'} alt='keepingly logo' width={34} height={40} />
                    <Image className={hideNav ? style.img  + ' ' + style.none : style.img  + ' ' + style.block} src={'/asset/logo/logo.png'} alt='keepingly logo' width={116 } height={40}/>
                    <div className={style.mobileTab}>
                        <div className={style.mobileTabImg}>
                            <Image  src={'/asset/logo/logo.png'} alt='keepingly logo' width={116} height={40} />
                        </div>
                        <div className={style.icon}>
                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path opacity="0.15" d="M8.00033 2C5.79119 2 4.00033 3.79086 4.00033 6C4.00033 8.66667 2.66699 11.3333 2.66699 11.3333H13.3337C13.3337 11.3333 12.0003 8.66667 12.0003 6C12.0003 3.79086 10.2095 2 8.00033 2Z" fill="#333333"/>
                                <path d="M2.66699 11.3333L1.99617 10.9979C1.87993 11.2304 1.89235 11.5065 2.029 11.7276C2.16566 11.9487 2.40706 12.0833 2.66699 12.0833V11.3333ZM13.3337 11.3333V12.0833C13.5936 12.0833 13.835 11.9487 13.9716 11.7276C14.1083 11.5065 14.1207 11.2304 14.0045 10.9979L13.3337 11.3333ZM4.75033 6C4.75033 4.20507 6.2054 2.75 8.00033 2.75V1.25C5.37697 1.25 3.25033 3.37665 3.25033 6H4.75033ZM8.00033 2.75C9.79525 2.75 11.2503 4.20507 11.2503 6H12.7503C12.7503 3.37665 10.6237 1.25 8.00033 1.25V2.75ZM3.25033 6C3.25033 7.21989 2.943 8.46693 2.62215 9.4295C2.46322 9.90629 2.30437 10.3033 2.18597 10.5796C2.12685 10.7175 2.07803 10.8248 2.04465 10.8964C2.02796 10.9321 2.01515 10.9589 2.00685 10.9761C2.0027 10.9846 1.99968 10.9908 1.99787 10.9945C1.99697 10.9963 1.99637 10.9975 1.99608 10.9981C1.99594 10.9984 1.99587 10.9985 1.99589 10.9985C1.9959 10.9985 1.99592 10.9984 1.99597 10.9983C1.99599 10.9983 1.99604 10.9982 1.99606 10.9982C1.99611 10.998 1.99617 10.9979 2.66699 11.3333C3.33781 11.6687 3.33788 11.6686 3.33796 11.6685C3.33799 11.6684 3.33807 11.6682 3.33814 11.6681C3.33826 11.6678 3.33841 11.6675 3.33858 11.6672C3.33892 11.6665 3.33934 11.6657 3.33983 11.6647C3.34083 11.6627 3.34214 11.66 3.34376 11.6567C3.347 11.6502 3.35147 11.641 3.35709 11.6294C3.36832 11.6062 3.38415 11.5731 3.40392 11.5307C3.44345 11.446 3.4988 11.3242 3.56468 11.1704C3.69628 10.8634 3.87077 10.427 4.04517 9.90384C4.39098 8.8664 4.75033 7.44677 4.75033 6H3.25033ZM2.66699 12.0833H13.3337V10.5833H2.66699V12.0833ZM13.3337 11.3333C14.0045 10.9979 14.0045 10.998 14.0046 10.9982C14.0046 10.9982 14.0047 10.9983 14.0047 10.9983C14.0047 10.9984 14.0048 10.9985 14.0048 10.9985C14.0048 10.9985 14.0047 10.9984 14.0046 10.9981C14.0043 10.9975 14.0037 10.9963 14.0028 10.9945C14.001 10.9908 13.998 10.9846 13.9938 10.9761C13.9855 10.9589 13.9727 10.9321 13.956 10.8964C13.9226 10.8248 13.8738 10.7175 13.8147 10.5796C13.6963 10.3033 13.5374 9.90629 13.3785 9.4295C13.0576 8.46693 12.7503 7.21989 12.7503 6H11.2503C11.2503 7.44677 11.6097 8.8664 11.9555 9.90384C12.1299 10.427 12.3044 10.8634 12.436 11.1704C12.5018 11.3242 12.5572 11.446 12.5967 11.5307C12.6165 11.5731 12.6323 11.6062 12.6436 11.6294C12.6492 11.641 12.6537 11.6502 12.6569 11.6567C12.6585 11.66 12.6598 11.6627 12.6608 11.6647C12.6613 11.6657 12.6617 11.6665 12.6621 11.6672C12.6622 11.6675 12.6624 11.6678 12.6625 11.6681C12.6626 11.6682 12.6627 11.6684 12.6627 11.6685C12.6628 11.6686 12.6628 11.6687 13.3337 11.3333ZM9.25033 12C9.25033 12.6904 8.69068 13.25 8.00033 13.25V14.75C9.51911 14.75 10.7503 13.5188 10.7503 12H9.25033ZM8.00033 13.25C7.30997 13.25 6.75033 12.6904 6.75033 12H5.25033C5.25033 13.5188 6.48154 14.75 8.00033 14.75V13.25ZM6.75033 12V11.3333H5.25033V12H6.75033ZM10.7503 12V11.3333H9.25033V12H10.7503Z" fill="#333333"/>
                            </svg>
                            { hideNav ? <svg onClick={()=> setHideNav(!hideNav)} width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M2.66699 4.66675H13.3337M2.66699 8.00008H13.3337M2.66699 11.3334H13.3337" stroke="#333333" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg> : <svg onClick={()=> setHideNav(!hideNav)} width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M12.6663 3.33325L3.33301 12.6666M3.33302 3.33325L12.6664 12.6666" stroke="#333333" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                                </svg>
                            }
                        </div>
                    </div>
                    <div style={{width: '100%'}} className={style.show}>
                        <SearchInput/>
                    </div>
                    <ul>
                    {liMap}
                    </ul>
                    <div className={`${style.cta}  ${hideNav && style.hide}`}>
                        <p className={style.text}>Your free plan</p>
                        <div className={style.textHolder}>
                            <p className={style.earn}>Uploads</p>
                            <div className={style.text}>
                            <span>25</span>/<span>100</span>
                            </div>
                        </div>
                        <div className={`${style.upload}`}>
                            <div></div>
                        </div>
                        <button>Upgrade now</button>
                        <p className={style.earn + ' ' + style.underline}>Earn more storage</p>
                    </div>
                </nav>
    )
}